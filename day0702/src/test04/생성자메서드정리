생성자 메서드
- new 키워드와 함께 호출하여 객체 생성
- 클래스명과 동일
- 결과형 리턴값을 갖지 않음(void도 쓰지 않음)
- 객체가 생성될 때 반드시 하나의 생성자 호출
- 멤버필드의 초기화에 주로 사용
- 하나의 클래스 내부에 생성자가 하나도 없으면 자동적으로 default 생성자가 있는 것으로 인지
	* default 생성자: 매개 변수도 없고 내용도 없는 생성자
- 매개변수의 개수가 다르거나, 자료형이 다른 여러 개의 생성자가 있을 수 있음(생성자 오버로딩)
- 생성자의 첫번째 라인으로 this() 생성자를 사용하여 또 다른 생성자를 하나 호출 가능

생성자 특징
- 클래스 명과 이름이 동일(대소문자)
- 변환타입이 없다.(void 작성 x)

기본(디폴트) 생성자
- 클래스 내에 생성자가 하나도 정의되어 있지 않을 경우 JVM이 자동으로 제공하는 생성자
- 형태: 매개변수가 없는 형태, 클래스 명(){}

파라미터가 있는 생성자
- 생성자의 목적이 필드 초기화
- 생성자 호출 시 값을 넘겨주어야 함
- 파라미터가 있는 생성자를 작성하면 JVM에서 기본 생성자를 추가하지 않는다

생성자 오버로딩을 지원한다.
- 클래스 내에 메소드 이름이 같고 매개변수의 타입 또는 개수가 다른 것

this
- 참조 변수로써 객체 자신을 가리킴
- this를 이용하여 자신의 멤버에 접근 가능(변수, 메서드)
- 지역변수(매개변수)와 필드의 이름이 동일할 경우 필드임을 식별할 수 있게 함
- 객체에 대한 참조이므로 static 영역에서 this 사용 불가
	* static 영역은 클래스(설계도) 영역. this는 실제 객체가 만들어져서,
	객체가 자기 자신을 가리킬 때 쓰는 것이기 때문.
	
this의 활용
- this.멤버변수
- this([인자값..]): 생성자 호출
- this 생성자 호출 시 제한사항
	* 생성자 내에서만 호출 가능함
	* 생성자 내에서 첫번째 구문에 위치해야 함